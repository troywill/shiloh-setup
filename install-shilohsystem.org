* Installing Shiloh System step by step
** DONE Read the wiki.archlinux.org [[https://wiki.archlinux.org/index.php/Beginners'_Guide][Beginner's Guide]]
** DONE Prepare the target media with parted and GPT
1. [X] Run lsblk to determine drive   
2. [X] (Optional) Zero drive
   #+BEGIN_SRC sh :tangle bin/partition/zero-the-drive.sh :shebang #!/bin/bash
     set -o errexit
     DEVICE="/dev/sdb"
     BS="1M"
     COUNT=4
     dd if=${DEVICE} of=SECTOR bs=$BS count=$COUNT
     dd if=/dev/zero of=${DEVICE} bs=$BS count=$COUNT
   #+END_SRC
3. [X] Create a GUID partition table with parted
   #+BEGIN_SRC sh
     parted /dev/sdb
     mklabel gpt
   #+END_SRC
4. [X] Create a boot partition with parted
   #+BEGIN_SRC sh
   mkpart primary 1 2
   set 1 bios_grub on
   #+END_SRC
5. [X] Create a root partition with parted
   #+BEGIN_SRC sh
     mkpart primary 2 8011
   #+END_SRC
6. [X] Verify partition
   #+BEGIN_SRC sh
     sudo parted /dev/sdb print
   #+END_SRC
7. [X] Format the partition
   #+BEGIN_SRC sh :tangle bin/partition/format-the-partion.sh :shebang #!/bin/bash
     set -o nounset
     set -o errexit
     LABEL="SD" #change this!
     DEVICE="/dev/sdb2" #change this!
     mkfs.ext4 -v -L $LABEL $DEVICE
   #+END_SRC
** DONE Mount the partition
#+begin_src sh :tangle bin/mount-the-partition.sh :shebang #!/bin/bash
set -o errexit
set -o nounset
DEVICE="/dev/sdb2" #change this!
mount --verbose $DEVICE /mnt
#+end_src
** DONE Connect to the internet
** Install the base system [4/4] 
1. [X] Install arch-install-scripts
   #+begin_src sh :tangle bin/arch-install-scripts.sh :shebang #!/bin/bash
     pacman --sync arch-install-scripts
   #+end_src
2. [X] (Optional) Copy xz files or link symbolically to host pkg directory
   #+begin_src sh :tangle bin/optional-cp-existing-pkg-cache :shebang #!/bin/bash
     set -o nounset
     set -o errexit
     mkdir --verbose --parent /mnt/var/cache/pacman/pkg
     rsync --archive --verbose /var/cache/pacman/pkg/* /mnt/var/cache/pacman/pkg
   #+end_src
   #+begin_src sh :tangle bin/optional-ln-existing-pkg-cache :shebang #!/bin/bash
     set -o nounset
     set -o errexit
     cd /mnt
     mkdir --verbose --parent var/cache/pacman
     cd var/cache/pacman
     ln --symbolic --verbose /var/cache/pacman/pkg
   #+end_src
3. [X] Install packages with pacstap
   Before installing, you may want to edit /etc/pacman.d/mirrorlist such that your
   preferred mirror is first. This copy of the mirrorlist will be installed on your
   new system by pacstrap} as well, so it's worth getting it right.
   
   Using the pacstrap script we install the base system. The 'base-devel' package group
   should also be installed if you plan on compiling software from the [[AUR]] or using [[ABS]].
 
   Other packages can be installed by appending their names to the above command (space
   seperated), including the bootloader if you want.
   
   #+BEGIN_SRC sh :tangle bin/install-with-pacstrap.sh :shebang #!/bin/bash
     set -o errexit
     set -o nounset
     INSTALL="grub-bios os-prober"
     DEVEL="base-devel git stow"
     SYSTEM="ntp openssh rsync screen sudo wget pkgfile abs"
     EMACS="emacs"
     TEX="texlive-core texlive-latexextra"
     WIRELESS="wireless_tools wpa_supplicant"
     XORG="xorg-server xorg-xinit xf86-video-intel xf86-input-synaptics"
     WEB="chromium"
     XORG_FONTS="ttf-dejavu ttf-hannom"
     KDE="kdebase-konsole kdegraphics-gwenview kdebase-konqueror kdeedu-kstars"
     AUDIO="alsa-utils"
     VIDEO="flashplugin youtube-dl smplayer"
     pacstrap /mnt base $INSTALL $DEVEL $SYSTEM $EMACS $WIRELESS $XORG $WEB $KDE $AUDIO $VIDEO $XORG_FONTS
   #+END_SRC  
4. [X] (Optional) Remove symbollic link
   #+begin_src sh :tangle bin/optional-ln-existing-pkg-cache-remove :shebang #!/bin/bash
     set -o nounset
     set -o errexit
     cd /mnt/var/cache/pacman
     unlink pkg
     mkdir --verbose pkg
     ls -ld /mnt/var/cache/pacman/pkg
   #+end_src
** DONE [9/9] Configure the system
1. [X] Generate an [[fstab]]
   #+BEGIN_SRC sh :tangle bin/configure-fstab.sh :shebang #!/bin/bash
     # if you prefer to use UUIDs or labels,
     # add the -U or -L option
     genfstab -pU /mnt >> /mnt/etc/fstab
   #+END_SRC
   - Note: I got an error on Friday, November 9 running genfstab: "findmnt: unknown column: FSROOT"
   #+BEGIN_EXAMPLE
     # 
     # /etc/fstab: static file system information
     #
     # <file system> <dir>   <type>  <options>       <dump>  <pass>
     tmpfs           /tmp    tmpfs   nodev,nosuid    0       0
     LABEL=shiloh / ext4 defaults 0 1
   #+END_EXAMPLE
2. [X] [[chroot]] into our newly installed system
   #+BEGIN_SRC sh
     arch-chroot /mnt
   #+END_SRC
3. [X] Write your hostname to /etc/hostname.
   #+BEGIN_SRC sh :tangle bin/configure-hostname.sh :shebang #!/bin/bash
     set -o nounset
     HOSTNAME="kangaroo" # change this!
     echo $HOSTNAME > /etc/hostname
   #+END_SRC
4. [X] Symlink /etc/localtime to /usr/share/zoneinfo/Zone/SubZone.
   - Replace Zone and Subzone to your liking. For Los_Angeles:
     #+BEGIN_SRC sh :tangle bin/configure-timezone.sh :shebang #!/bin/bash
       ln -s /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
       ls -l /etc/localtime
     #+END_SRC   
5. [X] Set [[https://wiki.archlinux.org/index.php/Locale#Setting_system-wide_locale][locale]] preferences in /etc/locale.conf
   #+BEGIN_SRC sh :tangle bin/configure-locale.sh :shebang #!/bin/bash
     set -o verbose
     cat /etc/locale.conf
     echo 'LANG="en_US.UTF-8"' > /etc/locale.conf
     cat /etc/locale.conf
   #+END_SRC
6. [X] Uncomment en_US.UTF-8 in /etc/locale.gen
   #+begin_src perl :tangle bin/configure-locale-gen.pl :shebang #!/usr/bin/env perl
     use warnings;
     use strict;
     my $regexp = '^#en_US.UTF-8 UTF-8';
     my $replacement = 'en_US.UTF-8 UTF-8';
     open(my $oldlocale, "<", "/etc/locale.gen")      # open for update
         or die "Can't open '/etc/locale.gen' for reading: $!";
     open(my $newlocale, ">", "/etc/locale.gen.tmp")
         or die "Can't open '/tmp/locale.gen' for writing: $!";
     while (<$oldlocale>) {
         s/$regexp/$replacement/;
         print $newlocale $_ or die "can't write $newlocale: $!";;
     }
     
     close($oldlocale)            or die "can't close $oldlocale: $!";
     close($newlocale)            or die "can't close $newlocale: $!";
     rename("/etc/locale.gen", "/etc/locale.gen.orig")   or die "can't rename /etc/locale.gen /etc/locale.gen.orig: $!";
     rename("/etc/locale.gen.tmp", "/etc/locale.gen") or die "can't rename /etc/locale.gen.tmp /etc/locale.gen: $!";
   #+end_src
7. [X] locale-gen
    #+BEGIN_SRC sh :tangle bin/locale-gen.sh :shebang #!/bin/bash
      locale-gen
    #+END_SRC
8. [X] Add [[https://wiki.archlinux.org/index.php/KEYMAP][console keymap and font]] preferences in /etc/vconsole.conf
   #+BEGIN_SRC sh :tangle bin/configure-vconsole.sh :shebang #!/bin/bash
     echo KEYMAP=us > /etc/vconsole.conf
   #+END_SRC
9. [X] Configure /etc/mkinitcpio.conf as needed (see [[mkinitcpio]]) and create an initial RAM disk
   #+BEGIN_SRC sh :tangle bin/configure-mkinitcpio.sh :shebang #!/bin/bash
     mkinitcpio -p linux
   #+END_SRC
** TODO [3/4] Configure the bootloader: refer back to the appropriate article from the bootloader installation section.
1. [X] READ https://wiki.archlinux.org/index.php/GRUB2
2. [X] Install osprober if Windows dual boot
   #+begin_src sh
     pacman --sync os-prober
   #+end_src
3. [X] run grub-install to cp grub boot files and optionally install to 440-byte MBR boot code region
   #+BEGIN_SRC sh :tangle bin/configure-grub-install.sh :shebang #!/bin/bash
     DEVICE=/dev/sdb #change this as desired!
     modprobe dm-mod
     sleep 1
     grub-install --target=i386-pc --recheck --debug $DEVICE
     cp --verbose /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo
   #+END_SRC
   - NOTE!
     + /usr/sbin/grub-bios-setup: warning: this GPT partition label contains no BIOS Boot Partition
       ; embedding won't be possible.
     + /usr/sbin/grub-bios-setup: warning: Embedding is not possible.  GRUB can only be installed in
       this setup by using blocklists.  However, blocklists are UNRELIABLE and their use is discouraged..
4. [ ] Generate GRUB2 BIOS Config file
   #+BEGIN_SRC sh :tangle bin/configure-grub-cfg.sh :shebang #!/bin/bash
     grub-mkconfig -o /boot/grub/grub.cfg
   #+END_SRC
** TODO Set a root password with passwd.
** TODO Add a user
   #+BEGIN_SRC sh :tangle bin/configure-adduser.sh :shebang #!/bin/bash
     useradd -m -g users -s /bin/bash troy
     passwd troy
   #+END_SRC   
** TODO Configure pacman
Edit /etc/pacman.conf and configure pacman's options, also enabling the repositories you need.

See [[Pacman]] and [[Official Repositories]] for details.

== Update the system ==
At this point you should update your system.

See [[Pacman#Upgrading packages|Upgrading packages]] for instructions.

== Add a user ==
Finally, add a normal user as described in [[Users and Groups#User management|User management]].

Your new Arch Linux base system is now a functional GNU/Linux environment: you can proceed to [[Beginners' Guide/Extra]] for customization suggestions.

** TODO Unmount and reboot
If you are still in the chroot environment type exit or press Ctrl+D in order to exit.
Earlier we mounted the partitions under /mnt. In this step we will unmount them:
#+begin_src sh
umount /mnt/{boot,home,}
#+end_src

Now reboot and then login into the new system with the root account.

