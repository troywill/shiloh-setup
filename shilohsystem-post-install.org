* [0/0] Post install activities
  1. [4/4] Create and upload Enable Github ssh key
     1. [X] Read https://help.github.com/articles/generating-ssh-keys to get an overview
     2. [X] Generate an rsa SSH key pair
	#+BEGIN_SRC sh :tangle bin/generate-rsa-key-pair.sh :shebang #!/bin/sh
          ssh-keygen -t rsa -C"$(id -un)@$(hostname)-$(date --rfc-3339=date)"
	#+END_SRC
     3. [X] Enter pass phrase when prompted
     4. [X] Copy id_rsa.pub to github
     5. ssh-agent [2/4]
	1. [X] run the command through the eval command
	   #+BEGIN_SRC sh
             eval $(ssh-agent)
           #+END_SRC
	2. [X] add your private key to ssh-agents' cache.
	   #+BEGIN_SRC sh
             ssh-add ~/.ssh/id_ecdsa
	   #+END_SRC
	3. [ ] append ssh-agent to ~/.bash_profile
	   #+BEGIN_SRC sh
              echo 'eval $(ssh-agent)' >> ~/.bash_profile
	   #+END_SRC
	4. [ ] append ssh-add to ~/.bash_profile
	   #+BEGIN_SRC sh
	     echo 'ssh-add' >> ~/.bash_profile
	   #+END_SRC
  2. git config
     #+BEGIN_SRC sh
       git config --global user.email "you@example.com"
       git config --global user.name "Your Name"
       
     #+END_SRC
* External Documentation Links
** [[http://www.openssh.com/][http://www.openssh.com/]]

     
     

  
  
  
* bin/shiloh-postinstall.pl
#+begin_src perl :tangle bin/shiloh-postinstall.pl :shebang #!/usr/bin/env perl :noweb yes
use warnings;
use strict;
<<install-cpanminus>>
<<install-perl-modules>>
#+end_src
** Install cpanminus
#+name: install-cpanminus   
#+begin_src perl
print "Installing Tatsuhiko Miyagawa's cpanminus script with pacman ...\n";
system("sudo pacman --sync cpanminus");
#+end_src   
** Install Perl modules
#+name: install-perl-modules   
#+begin_src perl
system("sudo pacman --sync perl-libwww");
system("cpanm --sudo Modern::Perl Term::ReadKey Perl::Critic AppConfig Perl::Tidy");
#+end_src
   
* TODO 10-install/020-initial-setup/01-adduser.pl
* TODO sudoers
#+begin_src perl :tangle sudo.pl :shebang #!/usr/bin/env perl
use warnings;
use strict;

my $user = 'troy';

open ( my $out, '>>', '/etc/sudoers' );
print $out <<"END";
### Following lines added by 4g-arch-040-sudoers
# Defaults specification
Defaults:$user timestamp_timeout=-1
Defaults !tty_tickets
# User privilege specification
root	ALL=(ALL) ALL
$user	ALL=(ALL) ALL
END

sub run_command {
    my $command = shift;
    print "=> $command\n";
    system $command;
}

#+end_src
* TODO Chromium flash
1. [ ] Read https://wiki.archlinux.org/index.php/Chromium#Flash_Player
1. [ ] https://aur.archlinux.org/packages/chromium-pepper-flash/
Disable all other flash plugins:
#+begin_src sh
chromium chrome://plugins
#+end_src
Type [[http://chrome\://plugins/][chrome://plugins]] in the adress bar and press Enter
Click on Details button on the top right
Click on Disable near all the Flash plugins except the first one

















** Programmers/Developers
1. [ ] SSH Keys
   *** [[https://wiki.archlinux.org/index.php/SSH_keys][SSH Key authentication]] (Arch Linux)
  1. [ ] Generate an SSH key pair
#+begin_src sh
ssh-keygen -b 521 -t ecdsa -C"$(id -un)@$(hostname)-$(date --rfc-3339=date)"
#+end_src
  2. [ ] Enter pass phrase when prompted
  3. [ ] Copy id_ecdsa.pub to troywill.com
#+begin_src sh
ssh-copy-id -i ~/.ssh/id_ecdsa.pub root@troywill.com
#+end_src
  4. [ ] Copy id_ecdsa.pub to troywill.com
#+begin_src sh
ssh-copy-id -i ~/.ssh/id_ecdsa.pub troy@troywill.com
#+end_src
  5. ssh-agent [0/2]
     1. [ ] run the command through the eval command
#+BEGIN_SRC sh
  eval $(ssh-agent)
#+END_SRC
     2. [ ] add your private key to ssh-agents' cache.
#+BEGIN_SRC sh
  ssh-add ~/.ssh/id_ecdsa
#+END_SRC


